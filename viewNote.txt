MVVM双向绑定::
public class XData
{

    //android:onClick="@{data.onClickListener()}"
    //android:onClick="@{data.onClickListener}"
    public View.OnClickListener onClickListener() {
        return v -> {
            ToastUtil.showShort("xxx\nxxxxxxxxxddddddddd334455");
        };
    }

    //android:onClick="@{data.xOnclick}" 可以
    //android:onClick="@{data.xOnclick()}" 不可以 xOnclick是变量不是方法
    //android:onClick="@{data::xOnclick}" 可以 xOnclick是方法
    public View.OnClickListener xOnclick = this::getRootViewClickxx;
    public View.OnClickListener xOnclick22 = v -> onClickListener();


    //android:onClick="@{data.getRootViewClickxx}"
    //android:onClick="@{data::getRootViewClickxx}"
    public void getRootViewClickxx(View view) {
        ToastUtil.showShort("onRootViewClickxx-" + text);
    }

    //android:onClick="@{data.say}"
    //android:onClick="@{data::say}"
    public void say(View view) {
        ToastUtil.showShort("say");
    }

//    android:text="@={data.text}"
    public final ObservableField<String> text = new ObservableField<>();

//    android:text="@={data.textS}"  ps:一定要写get和set方法  反向绑定才会走set方法
    public String textS;

//    android:text="@={data.textS}"
    public String getTextS(){
        return textS;
    }

//    android:text="@={data.textS}"
    public void setTextS(String s){
        this.textS = s;
        text.set(s);
        ToastUtil.showShort("sayssssss");
//        notifyPropertyChanged(BR.textS);
    }

}